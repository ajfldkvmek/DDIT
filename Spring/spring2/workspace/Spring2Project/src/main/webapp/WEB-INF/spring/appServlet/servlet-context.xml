<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"></beans:property>
	</beans:bean>
	
	
	<beans:bean id="tilesViewResolver" 
				class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" 
					value="org.springframework.web.servlet.view.tiles3.TilesView"></beans:property>
		<beans:property name="order" value="1"></beans:property>
	</beans:bean>
	
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	
<!-- 	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	
	 </beans:bean> -->
	 
	
	<!-- 아래처럼 전체로 묶지말고 필요한 단위 별로  -->
<!-- 	<context:component-scan base-package="kr.or.ddit" /> -->
	<context:component-scan base-package="kr.or.ddit.controller" />
	<context:component-scan base-package="kr.or.ddit.security" />

	<security:global-method-security pre-post-annotations="enabled" 
		secured-annotations="enabled" />
		
	<!-- 
		인터셉터 설정
		LoginInterceptor 크래스를 빈으로 정의한다
		설정한 클래스는 해당 위치에 존재해야한다(패키지 구조에 맞는 위치여야함)
	 -->
	
<!-- 	<beans:bean id="loginInterceptor"  -->
<!-- 		class="kr.or.ddit.controller.intercept.LoginInterceptor"></beans:bean> -->
<!-- 	<interceptors> -->
<!-- 		<interceptor> -->
<!-- 			<mapping path="/intercept/login"/> -->
<!-- 			<beans:ref bean="loginInterceptor"/> -->
<!-- 		</interceptor> -->
<!-- 	</interceptors> -->
	
	
<!-- 	<beans:bean id="accessLoggingInterceptor" -->
<!-- 		class="kr.or.ddit.controller.intercept.AccessLoggingInterceptor"></beans:bean> -->
		
<!-- 	<interceptors> -->
<!-- 		<interceptor> -->
<!-- 			<mapping path="/**" /> -->
<!-- 			 대충 /resources 안에 있는 놈들은 인터셉터 안해도된다는 말  --> 
<!-- 			<exclude-mapping path="/resources/**"/>  -->
<!-- 			<beans:ref bean="accessLoggingInterceptor"/> -->
<!-- 		</interceptor> -->
<!-- 	</interceptors> -->
	
	
	
</beans:beans>
