<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!-- 6. 사용자 정의 접근 거부 처리자 추가  -->
	<bean id="customAccessDenied" class="kr.or.ddit.security.CustomAccessDeniedHandler"></bean>

	<!-- 8 로그인 성공 처리 -->
	<bean id="customLoginSuccess" class="kr.or.ddit.security.CustomLoginSuccessHandler"></bean>
	
	<!-- 10. JDBC를 이용한 인증/인가 처리: 비밀번호 암호화 처리기를 사용하지 않을 때  -->
<!-- 	<bean id="customPassWordEncoder"  -->
<!-- 		class = "kr.or.ddit.security.CustomNoOpPasswordEncoder"/> -->
	
	<!-- 11.사용자 테이블을 이용한 인증/인가 처리  -->
	<bean id="bcryptPasswordEncoder" 
			class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	
	<!-- 12. UserDetailsService 재정의 -->
	<bean id="customUserDetailsService" 
			class="kr.or.ddit.security.CustomUserDetailsService"/>

	<security:http>

		<!-- 8. 로그인 성공후 처리를 담당하는 처리자로 지정  -->
		<security:form-login login-page="/notice/login.do" 
				authentication-success-handler-ref="customLoginSuccess"/>

		<!-- 6. 사용자 정의 접근 거부처리자 -->
		<security:access-denied-handler ref="customAccessDenied" />
		
		
		<!-- 
			자동 로그인 적용
			- 데이터 소스를 시정하고 테이블을 이용해서 기존 로그인 정보를 기록
			- 쿠키 유효시간지정(604800초 == 7일)
		  -->
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
		
		<!-- logout처리할 uri지정하고 로그아웃하고 세션을 무효화한다 -->
		<!-- 시큐리티에서 제공하는 default 로그아웃 처리 uri는 '/logout'  
			로그아웃이 정상적으로 이루어 졌다면 /login 로그인 페이지로 이동한다
			/login?logout >> 로그인 페이지에서는 logout정보에 logout이 메세지로 나타난다
		-->
		<security:logout logout-url="/logout" invalidate-session="true"
					delete-cookies="remember-me, JSESSION_ID"/>
		
	</security:http>


	<security:authentication-manager>
		
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	
	</security:authentication-manager>
	
	

</beans>
