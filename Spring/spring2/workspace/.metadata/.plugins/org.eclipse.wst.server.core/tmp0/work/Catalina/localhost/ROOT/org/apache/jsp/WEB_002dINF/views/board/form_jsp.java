/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2024-03-23 06:55:50 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class form_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<div class=\"container-fluid px-2 px-md-4\">\r\n");
      out.write("\t<div class=\"page-header min-height-300 border-radius-xl mt-4\"\r\n");
      out.write("\t\tstyle=\"background-image: url('https://images.unsplash.com/photo-1531512073830-ba890ca4eba2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1920&q=80');\">\r\n");
      out.write("\t\t<span class=\"mask  bg-gradient-secondary opacity-6\"></span>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<form class=\"card card-body mx-3 mx-md-4 mt-n6\" id=\"boardForm\" method=\"post\" \r\n");
      out.write("\t\taction=\"/board/insert.do\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t\t<div class=\"row gx-4 mb-2\">\r\n");
      out.write("\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t<div class=\"input-group input-group-outline mb-4\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"boTitle\" name=\"boTitle\" value=\"\" placeholder=\"제목을 입력해주세요.\">\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t<div class=\"input-group input-group-outline mb-4\">\r\n");
      out.write("\t\t\t\t\t<textarea class=\"form-control\" cols=\"50\" rows=\"20\" id=\"boContent\" name=\"boContent\"></textarea>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t<div class=\"input-group input-group-outline mb-4\">\r\n");
      out.write("\t\t\t\t\t<input type=\"file\" class=\"form-control\" id=\"boFile\" name=\"boFile\" multiple=\"multiple\" />\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-12\"><br/></div>\r\n");
      out.write("\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-2\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"card\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card-header p-0 position-relative mt-n4 mx-3 z-index-2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<a class=\"d-block blur-shadow-image text-center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<img src=\"https://demos.creative-tim.com/test/material-dashboard-pro/assets/img/products/product-1-min.jpg\" alt=\"img-blur-shadow\" class=\"img-fluid shadow border-radius-lg\">\r\n");
      out.write("\t\t\t\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"colored-shadow\" style=\"background-image: url(&quot;https://demos.creative-tim.com/test/material-dashboard-pro/assets/img/products/product-1-min.jpg&quot;);\"></div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card-body text-center bg-white border-radius-lg p-3 pt-0\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<h6 class=\"mt-3 mb-1 d-md-block d-none\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t파일명 (파일크기)\r\n");
      out.write("\t\t\t\t\t\t\t\t</h6>\r\n");
      out.write("\t\t\t\t\t\t\t\t<p class=\"mb-0 text-xs font-weight-bolder text-info text-uppercase\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-primary btn-sm\" title=\"삭제\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\tdelete\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</p>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" id=\"insertBtn\">등록</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" onclick=\"javascript:location.href='/board/detail.do?boNo=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.boNo}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\">취소</button>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"btn btn-info\" onclick=\"javascript:location.href='/board/list.do'\">목록</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("$(function(){\r\n");
      out.write("\tCKEDITOR.replace(\"boContent\", {\r\n");
      out.write("\t\tfilebrowserUploadUrl : \"/imageUpload.do\"\r\n");
      out.write("\t});\r\n");
      out.write("\tCKEDITOR.config.width = \"100%\";\r\n");
      out.write("\tCKEDITOR.config.height = \"400px\";\r\n");
      out.write("\t\r\n");
      out.write("\tvar insertBtn = $(\"#insertBtn\");\r\n");
      out.write("\tvar boardForm = $(\"#boardForm\");\r\n");
      out.write("\t\r\n");
      out.write("\tinsertBtn.on(\"click\", function(){\r\n");
      out.write("\t\tvar title = $(\"#boTitle\").val();\r\n");
      out.write("\t\tvar content = CKEDITOR.instances.boContent.getData();\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(title == null || title == \"\"){\r\n");
      out.write("\t\t\talert(\"제목을 입력해주세요!\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(content == null || content == \"\"){\r\n");
      out.write("\t\t\talert(\"내용을 입력해주세요!\");\r\n");
      out.write("\t\t\treturn false;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tboardForm.submit();\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\n");
      out.write("</script>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
