/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2024-02-13 00:54:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.scripttest;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class question01_005f3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/pageModule/headPart.jsp", Long.valueOf(1706056799332L));
    _jspx_dependants.put("/pageModule/header.jsp", Long.valueOf(1705977547921L));
    _jspx_dependants.put("/pageModule/footer.jsp", Long.valueOf(1705977677153L));
    _jspx_dependants.put("/pageModule/footerPart.jsp", Long.valueOf(1705977824107L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html class=\"no-js\" lang=\"zxx\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\" />\r\n");
      out.write("    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\" />\r\n");
      out.write("    <title>쉽게 배우는 JSP 웹 프로그래밍</title>\r\n");
      out.write("    <meta name=\"description\" content=\"\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/images/favicon.svg\" />\r\n");
      out.write("    <!-- Place favicon.ico in the root directory -->\r\n");
      out.write("\r\n");
      out.write("    <!-- Web Font -->\r\n");
      out.write("    <link\r\n");
      out.write("        href=\"https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\"\r\n");
      out.write("        rel=\"stylesheet\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Lato&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("    <!-- ========================= CSS here ========================= -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/css/bootstrap.min.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/css/LineIcons.2.0.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/css/animate.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/css/tiny-slider.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/css/glightbox.min.css\" />\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/css/main.css\" />\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>");
      out.write("\r\n");
      out.write("\t<script src=\"https://code.jquery.com/jquery-3.7.1.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\r\n");
      out.write("\t$(function() {\r\n");
      out.write(" \t\tvar html = \"\";\r\n");
      out.write("\t\tvar ele = null;\r\n");
      out.write("\t\t$(\"td\").on(\"click\", function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tele = $(this); //현재 클릭한 td Element 담아두기\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar chkVal = $(\"#chk:checked\").val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(chkVal == \"Y\"){\r\n");
      out.write("\t\t\t\thtml += ele.text() + \"<br/>\";\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\thtml = \"\";\r\n");
      out.write("\t\t\t\thtml += \"<p id = 'p'>\" + ele.text() + \"</p>\";\r\n");
      out.write("\t\t\t\thtml += \"<button class='btn btn-warning' id = 'udtBtn'>수정</button>\";\r\n");
      out.write("\t\t\t\thtml += \"<button class='btn btn-danger' id = 'delBtn'>삭제</button>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$(\"#output\").html(html);\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t/* \t\t\r\n");
      out.write("\t \t$(\"#udtBtn\").on(\"click\", function(){\r\n");
      out.write("\t\t\t처럼하며 안되고\r\n");
      out.write("\t\t}); \r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\t//아래처럼 해야함\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#output').on(\"click\",\"#udtBtn\", function(){\r\n");
      out.write("\t\tvar text = $(this).text();\t// 버튼 text\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//\t동적으로 생성된 수정버튼을 클릭하게 되면 수정 버튼은 확인버튼으로 변경되고 수정 될 준비를 한다.\r\n");
      out.write("\t\t//\t수정이 완료되면 다시 수정버튼으로 활성화되어 수정을 할 수 있도록 버튼이 변경된다.\r\n");
      out.write("\t\tif(text == \"수정\"){\r\n");
      out.write("\t\t\t// 출력란에 출력된 텍스트르 가져온다.\r\n");
      out.write("\t\t\tvar pText = $(\"#output\").find(\"#p\").text();\r\n");
      out.write("\t\t\t// 가져온 텍스트를 input 입력 요소에 담기 위한 준비\r\n");
      out.write("\t\t\t$(\"#p\").html(\"<input type='text' class='form-control' id='pText' value='\"+pText+\"'/>\");\r\n");
      out.write("\t\t\t$(this).text(\"확인\");// 버튼 텍스트를 수정에서 확인으로 변경한다.\r\n");
      out.write("\t\t}else{\t// 동적으로 생성된 확인 버튼을 클릭 했을 때\r\n");
      out.write("\t\t\t// input 입력 요소에 value인 text를 가져와 p태그에 출력\r\n");
      out.write("\t\t\t$(\"#p\").html($(\"#output\").find(\"#pText\").val());\r\n");
      out.write("\t\t\t// 수정된 텍스트가 있는 p태그 내의 텍스트를 가져와 td요소를 클릭했을 때 담아뒀던 Element에 출력\r\n");
      out.write("\t\t\tele.html($(\"#output\").find(\"#p\").text());\r\n");
      out.write("\t\t\t$(this).text(\"수정\");// 버튼의 text를 수정으로 변경한다.\r\n");
      out.write("\t\t\thtml = \"\";\t// 담아웠던 텍스트 초기화\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("/* \t\t$(\"#output\").on(\"click\", \"#udtBtn\", function(){\r\n");
      out.write("\t\t\tvar text = $(this).text(); //버튼text\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//동적으로 생성된 수정 버튼을 클릭하게 되면 수정 버튼은 확인버튼으로 변경되고 수정이 될 준비를 한다\r\n");
      out.write("\t\t\t//수정이 완료되면 다시 수정버튼으로 활성회되어 수정을 할 수 있도록 버튼이 변경된다\r\n");
      out.write("\t\t\tif(text == \"수정\"){\r\n");
      out.write("\t\t\t\t//출력란에 출력된 텍스트를 가져옴\r\n");
      out.write("\t\t\t\tvar pText = $(\"#output\").find(\"#p\").text();\r\n");
      out.write("\t\t\t\t//가져온 텍스트를 input입력 요소에 담기위한 준비\r\n");
      out.write("\t\t\t\t$(\"#p\").html(\"<input type='text' class='form-control' id='pText' value='\" + pText +\"'/>\");\r\n");
      out.write("\t\t\t\t$(this).text(\"확인\");//버튼의 텍스트를 수정에서 확인으로 변경\r\n");
      out.write("\t\t\t} else {\r\n");
      out.write("\t\t\t\t//동적으로 생성된 확인 버튼을 클릭했을 때\r\n");
      out.write("\t\t\t\t//input입력 요소에 value인 text가져와서 p태그 출력\r\n");
      out.write("\t\t\t\t$(\"#p\").html($(\"#output\").find(\"#pText\").val());\r\n");
      out.write("\t\t\t\tele.html($(\"#ouput\").find(\"#p\").text()); //수정된 텍스트가 있는 p태그 내의 텍스트를 가져와 td요소를 클릭했을 때 담아뒀던 element에 출력\r\n");
      out.write("\t\t\t\t$(this).text(\"수정\");//버튼의 text를 수정으로 변경\r\n");
      out.write("\t\t\t\thtml = \"\"; // html초기화\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}); */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t$(\"#output\").on(\"click\", \"#delBtn\", function(){\r\n");
      out.write("\t\t\t$(\"#output\").find(\"#p\").html(\"\");\t//출력란의 p태그 초기화\r\n");
      out.write("\t\t\tele.html(\"\"); //선택된 td element 초기화\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// append 체크 이벤트\r\n");
      out.write("\t\t// append 체크 이벤트가 발생했을 때 html 변수를 \"\"으로 처리해준다\r\n");
      out.write("\t\t$(\"#chk\").on(\"change\", function(){\r\n");
      out.write("\t\t\thtml=\"\";\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t \r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("    <div class=\"preloader\">\r\n");
      out.write("        <div class=\"preloader-inner\">\r\n");
      out.write("            <div class=\"preloader-icon\">\r\n");
      out.write("                <span></span>\r\n");
      out.write("                <span></span>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"breadcrumbs\" style=\"padding-top:40px;\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row align-items-center\">\r\n");
      out.write("                <div class=\"col-lg-6 col-md-6 col-12\">\r\n");
      out.write("                    <div class=\"breadcrumbs-content\">\r\n");
      out.write("                        <h1 class=\"page-title\">JSP 개요</h1>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-lg-6 col-md-6 col-12\">\r\n");
      out.write("                    <ul class=\"breadcrumb-nav\">\r\n");
      out.write("                        <li><a href=\"/\">INDEX</a></li>\r\n");
      out.write("                        <li>CH01</li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <section class=\"about-us section\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row align-items-center justify-content-center\">\r\n");
      out.write("                <div class=\"col-lg-12 col-md-12 col-12\">\r\n");
      out.write("                    <div class=\"content-left wow fadeInLeft\" data-wow-delay=\".3s\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"table-responsive\">\r\n");
      out.write("\t\t\t\t\t\t\t<table class=\"table table-bordered table-hover\" id=\"tbl\" width=\"100%\" id=\"tb\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>번호</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>작성자</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>작성일</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<th>조회수</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>10</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>네이버웍스 비정기 업데이트 소식</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>관리자</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>2022-11-16</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>1455</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>9</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>네이버웍스 일부 기능의 사양 변경 및 종료 안내</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>관리자</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>2022-11-15</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>234</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>8</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>[프로모션 공지] 네이버웍스 X 워크플레이스 결합 서비스 신규 가입 20%추가 할인(~12.31)</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>관리자</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>2022-11-14</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>23444</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>7</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>[중요] 네이버웍스 V3.5 정기 업데이트 소식</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>관리자</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>2022-11-13</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>12466</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>6</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>[프로모션 사전 공지] 네이버웍스 X 워크플레이스 결합 서비스 20% 추가 할인</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>관리자</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>2022-11-12</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>111</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>5</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>드라이브 서비스 DB 업그레이드 작업 사전 안내</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>관리자</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>2022-11-11</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<td>2233</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t<hr/><br/>\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-12 stretch-card grid-margin\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"card-body\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"form-check form-check-inline\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input class=\"form-check-input\" type=\"checkbox\" id=\"chk\" value=\"Y\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<label class=\"form-check-label\" for=\"\" chk\"\">append 여부</label>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<h6>선택한 td안에 있는 글자를 아래 P태그에 출력해주세요!</h6>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<!-- <input type=\"text\" id=\"input\" value=\"\" class=\"form-control\"/> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<p id=\"output\" class=\"text-info\">출력란\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</p>\r\n");
      out.write("<!-- \t\t\t\t\t\t\t\t\t<div id=\"btn-area\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"button\" id=\"mod\" value=\"수정\" class=\"btn btn-primary\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<input type=\"button\" id=\"del\" value=\"삭제\" class=\"btn btn-warning\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</div> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("    <footer class=\"footer\">\r\n");
      out.write("        <div class=\"footer-bottom\">\r\n");
      out.write("            <div class=\"container\">\r\n");
      out.write("                <div class=\"inner\">\r\n");
      out.write("                    <div class=\"row\">\r\n");
      out.write("                        <div class=\"col-12\">\r\n");
      out.write("                            <div class=\"content\">\r\n");
      out.write("                                <p class=\"copyright-text\"><a>대덕인재개발원 JSP</a>\r\n");
      out.write("                                </p>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("\r\n");
      out.write("    <!-- ========================= scroll-top ========================= -->\r\n");
      out.write("    <a href=\"#\" class=\"scroll-top btn-hover\">\r\n");
      out.write("        <i class=\"lni lni-chevron-up\"></i>\r\n");
      out.write("    </a>");
      out.write('\r');
      out.write('\n');
      out.write('	');
      out.write("\r\n");
      out.write(" <!-- ========================= JS here ========================= -->\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/wow.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/tiny-slider.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/glightbox.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/count-up.min.js\"></script>\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/assets/js/main.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("        //====== Clients Logo Slider\r\n");
      out.write("        tns({\r\n");
      out.write("            container: '.client-logo-carousel',\r\n");
      out.write("            slideBy: 'page',\r\n");
      out.write("            autoplay: true,\r\n");
      out.write("            autoplayButtonOutput: false,\r\n");
      out.write("            mouseDrag: true,\r\n");
      out.write("            gutter: 15,\r\n");
      out.write("            nav: false,\r\n");
      out.write("            controls: false,\r\n");
      out.write("            responsive: {\r\n");
      out.write("                0: {\r\n");
      out.write("                    items: 1,\r\n");
      out.write("                },\r\n");
      out.write("                540: {\r\n");
      out.write("                    items: 3,\r\n");
      out.write("                },\r\n");
      out.write("                768: {\r\n");
      out.write("                    items: 4,\r\n");
      out.write("                },\r\n");
      out.write("                992: {\r\n");
      out.write("                    items: 4,\r\n");
      out.write("                },\r\n");
      out.write("                1170: {\r\n");
      out.write("                    items: 6,\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        });\r\n");
      out.write("    </script>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
