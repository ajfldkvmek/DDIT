
쉽게배운느 jsp웹 프로그래밍

#연습문제 주관식 정리
#요약정리를 기반으로 개념 정리

03장 디렉티브 태그: 한글출력 및 페이지 모듈화하기

	01. 스크립트 태그의 세가지 종류에 대해 간단히 설명하시오
	
		 1) page	: jsp페이지에 대한 정보를 설정(ex. 오류페이지 등) 	 <%@ page%>
 		 2) include : 페이지 특정영역에 다른 문서를 포함하여 코드를 재사용해 유지보수성을 높일 수 있음(ex. <%@include file = "~~.jsp"%>
 		 3) tablib	: jsp에서 사용할 태그 라이블러리를 설정한다(ex. jstl) <%@ taglib%>
	
	
	02. jsp페이지가 사용할 자바 클래스를 설정하기 위한 page디렉티브 태그의 속성 >> <%@ page import= %>

	03. jsp페이지의 특정 영역에 외부 파의 내용을 포함하는 디렉티브 태그 >> <%@include file = "~~~"%>


04장 액션태그: 상품목록 표시하기

	01. 자바빈즈
		jsp페이지의 주요 기능 중 하나는 데이터를 보여주는 것.
		하나의 jsp페이지에 데이터를 보여주기 위한 자바 코드와 단순히 화면을 출력하느 html코드를 함께 작성하면 기능을 확장하거나 코드를 재사용하는데 어려움이 있음
		따라서 프로그램의 효율을 높이기 위헤 화면을 출력하는 부분과 데이터를 처리하는 로직을 구분하여 작성하며, 로직부분의 코드에 자바빈즈라는 클래스를 사용합ㄴ디ㅏ
	
		자바빈즈는 동적 콘텐츠 개발을 위해 자바 코드를 사용하여 자바 클래스로 로직을 작성하는 방법입니다
		즉 jsp페이지에서 화면을 표현하기 위한 계산식이나 자료의 처리를 담당하는 자바코드를 따로 분리하여 작성하는 것
		자바빈즈는 데이터 표현을 목적으로 하는 자바 클래스이므로 기존의 자바클래스를 작성하는 방법과 동일하게 작성합니다
		
		- VO와 같은 데이터를 저장할 클래스 공간에 해당
		- 추후 스크링에서 데이터를 바인딩 할 때(데이터를 받아들일 때) VO, 즉 자바빈즈 클래스 객체타입으로 데이터를 바로 받아낼 수 있다.
		
	02. 페이지 이동 방식
		
		1)forward
		예를 들어 게시판 등록 페이지를 요청한다고 가정합시다
		요청 url이 http:localhost/board/form.do 일 때,  서버로 넘어간 요청(request)에 해당하는 최종목적지(servlet)가 있고
		그 안에서 등록 폼에 해당하는 페이지를 요청하는 기능이 실행된다
		요청url에 매핑되는 서버 내 리소스(WEB-INF/views/board/form.jsp)는 보안 폴더에 해당하는 WEB-INF안에 있으므로,
		서버 안에서 응답으로 나가야 할 페이지를 찾아서 결과물을 만들고 응답을 브라우저 쪽으로 던져주는데, 이 과정이 페이지 이동방식 포워드입니다
		포워드는 서버로 들어온 요청(request)과 요청에 대한 처리가 완료된 후 응답(response)으로 나가는 횟수가 각 1개씩 존재한다
		만약 서버로 들어올 때 데이터1개 또는 2개이상을 갖고 들어왔을 때 포워드는 새로운 요청이 만들어져 응답으로 나가는 형태가 아니므로
		같은 요청(request)객체를 활용하여 데이터를 담아 응답으로 내보낼 수 있고 처음에 요청으로 들어온 데이터를 응답에서 또한 활용할 수 있다.
		
		
		2)redirect
		예를 들어 게시판에 등록기능을 요청한다고 가정합시다
		요청 url이 http:localhost/board/insert.do 일 때, 서버로 넘어간  서버로 넘어간 요청(request)에 해당하는 
		최종목적지(servlet)에 도착한다. 이떄, 등록기능에 대한 데이터 처리후 페이지 이동방식을 선택하여 응답으로 나가야 하는데,
		응답으로 나갈 페이지지가 데이터 처리 후 목록화면이라 가정하자.
		시스템이 알아서 브라우저로 300번대 ack신호를 보내 확인, 브라우저는 저버에게 응답
		새로운 요청을 localhost/board/insert.do에 하여 화면을 보내달라함
		서버는 다시 들어온 요청(request)에 목록화면을 서버안에서 찾아 결과의 리소스를 만들어 응답으로 내보낸다
		이 떄 최소요청은 등록기능을 가진 url이었지만 나가는 건 목록을 욫어할 때 사용하는 요청 url이되고 응답 화면은 목록화면으로 나감
		
		
		*** 데이터 처리후 포워딩하면? ***
		데이터 처리후 리다이렉트를 하지 않고 포워딩을 할 때 무넺점은 포워딩의 특징은 최초 요청에 url이 고정되고 선택된 응답 페이지가 결과로 나가기 때문에
		다시 새로고침을 할 경우 최초에 요청했던 기능을 담고 있는 url이 실행됨
		그렇게 되면 반복적인 데이터 처리 요청이 날라가기 떄문에 루프에 걸릴 수 있따
		따라서 데이터 처리 페이지 이동방식은 리다이렉트로 처리하는 것이 일반적











	
	
	
	
	
	
	
	
	
	