package kr.or.ddit;

import java.util.Arrays;

public class Solution {

	public static void main(String[] args) {
		/*
		 * String[] str = new String[5];
		 * 
		 * str[0] = "a"; str[1] = "b"; str[2] = "c"; str[3] = "d"; str[4] = "e";
		 * 
		 * for(int i = 0; i < 3; i++) { str[i] = str[i+1]; }
		 * 
		 * for(int i = 0; i < 3; i++) { System.out.println(str[i]); } }
		 * 
		 */
		Solution s = new Solution();

		//System.out.print(Arrays.toString(s.solution(1233219)));

	}

	public int solution(String s) {

		/*
		 * // 자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요. 예를들어 n이 12345이면 [5,4,3,2,1]을 리턴
		 * int[] answer = {};
		 * 
		 * int num = 0; long ten = 10; long remain = num%ten;
		 * 
		 * for(int i = 0; i < 10; i++) { num++; if(n < ten) break; ten *= 10; }
		 * 
		 * 
		 * answer = new int[num]; ten = 10;
		 * 
		 * for(int i = 0; i < answer.length; i++) { answer[i] = (int) (n%ten); n = n/10;
		 * }
		 * 
		 * return answer;
		 */
//		문자열 s를 숫자로 변환한 결과를 반환하는 함수, solution
//		제한 조건
//		s의 길이는 1 이상 5이하입니다.
//		s의 맨앞에는 부호(+, -)가 올 수 있습니다.
//		s는 부호와 숫자로만 이루어져있습니다.
//		s는 "0"으로 시작하지 않습니다.
        int answer = 0;
        
        char[] ch = s.toCharArray();
        
        if(ch[0] == '+') {
        	
        }
        
        
        
        return answer;
	}

}
