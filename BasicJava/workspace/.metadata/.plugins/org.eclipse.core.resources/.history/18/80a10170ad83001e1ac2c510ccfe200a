package controller;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

import oracle.net.ns.SessionAtts;
import print.RoomPrint;
import service.RoomService;
import service.exceptChk;
import util.ScanUtil;
import util.View;
import vo.Room;
import vo.RoomReserve;


public class RoomController extends RoomPrint {

	Random rand = new Random();
	RoomService rs = new RoomService();
	exceptChk chk = exceptChk.getInstance();
	
	public View room() {
		roomPrint();
		int select = ScanUtil.nextInt("메뉴를 선택하세요>> ");
		
		switch(select) {
		case 1:
			return View.RESERVE_ROOM; //예약하기
		case 2:
			return View.OUT_ROOM;
		case 3:
			return View.CHECK_ROOM; //좌석 확인하기
		default:
			return View.ROOM;
		}
	}



	public View reserveRoom() {
		List<Room> list = rs.showRoom(); 
		printSeat(list); //좌석 목록 받아와서 출력
	
		List<Object> param = new ArrayList<Object>();
		String id = (String) Controller.sessionStorage.get("id");
		String seat = ScanUtil.nextLine("좌석을 선택해 주세요>> ");
		int random = rand.nextInt(99999);
		//resvR  (random number)
		if(rand.nextInt(99999) < 10000) {
			random += 10000;
		}
		String resvNo = "resvR" + random;
		
		param.add(resvNo);
		param.add(id);
		param.add(seat);
		System.out.println(param);
		//입력한 값(좌석)에 해당하는 상태값이  y이면 사용가능
		boolean ck = false;
		
		while(true) {
			for(Room room : list) {
				if(seat.equalsIgnoreCase(room.getSeat_no()) && room.getSeat_stat().equalsIgnoreCase("Y")) {
					//면 사용가능
					ck = rs.reserveRoom(param);
					System.out.println("예약이 완료되었습니다.");
					Controller.sessionStorage.put("resv_no", resvNo);
					break;
				}
			}
			if(ck) break;
			else 
				System.out.print("다른 좌석을 선택해 주세요>> ");
		}		
		
		return View.ROOM;
	}
	
	public View outRoom() {
		List<Object> param = new ArrayList<Object>();
		String select = ScanUtil.nextLine("퇴실 하시겠습니까?(y/n)>> ");
		boolean outChk = chk.outChk(select);
		if(outChk) {
			param.add(Controller.sessionStorage.get("resv_no"));
			outChk = rs.outRoom(param);
			if(outChk == true) System.out.println("퇴실이 완료되었습니다");
			return View.MEMBER_MENU;
		} else {
			return View.ROOM;
		}	
	}

	
	public View checkRoom() {
		
		List<Object> param = new ArrayList<Object>();
		String str = (String) Controller.sessionStorage.get("id");
		System.out.println(str);
		RoomReserve rr = rs.checkRoom(param);
		System.out.println(rr);
		printMySeat(rr);
		return null;
	}
}