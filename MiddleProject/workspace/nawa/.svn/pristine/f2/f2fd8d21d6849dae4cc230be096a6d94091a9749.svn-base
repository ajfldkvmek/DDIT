<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="meet">
	
	<!-- 
	  이 영역에 SQL문에 맞는 태그를 사용하여 SQL문을 기술한다.
	  
	  사용할 수 있는 기본적인 태그들
	  <select> ~~~ </select>
	  <insert> ~~~ </insert>
	  <update> ~~~ </update>
	  <delete> ~~~ </delete>
	
	위 태그에서 사용되는 속성들
	
	1) id : 해당 태그(SQL)를 호출할 때 namespace값과 연결하여 사용하는 고유 ID값
	
	2) parameterType : SQL문에 사용될 데이터가 들어있는 객체타입을 지정한다.
	                     (보통 VO클래스 또는 자바의 자료형이름 등이 사용된다.)
	
    3) resultType : select문을 실행한 결과를 담을 객체타입을 지정한다.
    				(보통 VO클래스 또는 자바의 자료형이름 등이 사용된다.)
    				
    4) resultMap : 결과레코드 컬럼명과 VO객체의 속성명이 다를 경우에 적절한 매핑을 위해 사용한다.
	
	 -->
	 
	<update id="updateMeet" parameterType="meet.vo.MeetVO" >
	
		update meet
		set meet_name = #{meet_name},
		 meet_info = #{meet_info},
		 meet_level = #{meet_level},
		 meet_limit = #{meet_limit},
		 meet_loc = #{meet_loc}
		where meet_no = #{meet_no}
		
	</update>


	<insert id="insertMeet" parameterType="meet.vo.MeetVO">
	
	insert into meet
	( meet_no,  meet_name, meet_info, meet_day, meet_time, meet_level, meet_limit, meet_loc, meet_loc_detail, mcate_no, mem_id)
	values ( 
			#{meet_no}, 
			#{meet_name}, 
			#{meet_info}, 
			#{meet_day}, 
			#{meet_time}, 
			#{meet_level}, 
			#{meet_limit}, 
			#{meet_loc}, 
			#{meet_loc_detail}, 
			#{mcate_no},
			#{mem_id}
			) 
	
	</insert>
	
	
	<insert id="joinMeet" parameterType="meet.vo.MeetVO">
	insert into meet_apply
	(mem_id, meet_no, apply_no)
	values(#{mem_id}, #{meet_no}, #{apply_no} )
	
	</insert>
	
		
	<update id="deleteMeet" parameterType="string">
			
		update meet
		set meet_delyn = 'y'
		where meet_no = #{meetNo}
	
	</update> 
	
	
	
	<select id="selectMeetAll" resultType="meet.vo.MeetVO">
	
		select meet_no ,
			meet_name,
			meet_level,
			meet_score,
			meet_cnt,
			meet_limit,
			meet_loc,
			mem_id 
		from meet
		where meet_delyn='n'
	
	</select>

	<select id="getMeetDetail" parameterType="String" resultType="meet.vo.MeetVO">
		select meet_no ,
			meet_name ,
			meet_info ,
			meet_level,
			meet_cnt,
			meet_limit,
			meet_score,
			meet_loc,
			meet_loc_detail,
			mcate_no,
			mem_id,
			meet_day,
			meet_time
			
		from meet
		where meet_no = #{meetNo}
	</select>
	
	
<!-- 	<select id="getLoginInfo" parameterType="String" resultType="kr.or.ddit.member.vo.MemberVO">
		
		select mem_id as memId,
		       mem_name as memName,
		       mem_tel as memTel,
		       mem_addr as memAddr,
		       reg_dt as regDt,
		       atch_file_id as atchFileId
		from mymember
		where mem_id = #{memId}
			and mem_pass=#{memPass}
	</select>



	<select id="checkMember" parameterType="String" resultType="int">
		
		select count(*) as cnt
		from mymember
		where mem_id = #{memId}
	
	</select> -->
	
	<!-- <resultMap type="member.vo.MemberVO" id="memMap">
		<result column="mem_id"  property="memId" />
		<result column="mem_name"  property="memName" />
		<result column="mem_tel"  property="memTel" />
		<result column="mem_addr"  property="memAddr" />
		<result column="reg_dt"  property="regDt" />
		<result column="atch_file_id"  property="atchFileId" />
	</resultMap> -->
	
	
	 <select id="meetSearch" parameterType="meet.vo.MeetVO">
	
		select * from 
		meet 
		where meet_no like '%1%'
		
		and meet_name like '%배드민턴%'
		
		<if test='memId != null and memId != ""'>
			and mem_id = #{memId}
		</if>
		<if test='memName != null and memName != ""'>
			and mem_name = #{memName}
		</if>
		<if test='memTel != null and memTel != ""'>
			and mem_tel = #{memTel}
		</if>
		<if test='memAddr != null and !memAddr.equals("")'>
			and mem_addr like '%' || #{memAddr} || '%'
		</if>
			
	
	</select>
	
	
	 
	


</mapper>